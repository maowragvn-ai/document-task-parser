version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports: 
      - "6379:6379"
    volumes:
      - ./data/redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - vdp-prod
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "celery", "-A", "src.celery_worker", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - vdp-prod
    command: celery -A src.celery_worker worker --loglevel=info

  backend:
    build:
      context: .
      dockerfile: Dockerfile.api.prod
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - vdp-prod

networks:
  vdp-prod:
    driver: bridge
